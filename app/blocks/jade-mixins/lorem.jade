//- Jade form mixins
mixin input(elemName,inputtype, inputname, inputid, inputplaceholder)
	+b.INPUT(type=inputtype,name=inputname,id=inputid,placeholder=inputplaceholder)
//- Input fields mixin
mixin label(elemName,inputlabel, inputtype, inputname, inputid, inputplaceholder)
	+b.LABEL.block(class='form-element' for=inputid)&attributes(attributes)
		+e.SPAN= inputlabel
		+e.INPUT(type=inputtype,name=inputname,id=inputid,placeholder=inputplaceholder)

//- Select fields mixin
mixin select(selectlabel,selectname,options)
	label&attributes(attributes)= selectlabel
	select(name=selectname)
		each obj in options
			option(value="#{obj}") #{obj}

//- Build a form...
form
	+input('Name:','text','username','username','Your Name').block
	+input('Email:','email','usermail','usermail','Your Email').block

	//- Array for options
	-var fruits = ['Orange','Banana','Apple']
	+select('Choose a Fruit:','selectbox',fruits).inline
//- mixin label-input('name', 'type', placeholder,labelText)
//- 	+b(class='input_' + type)
//- 		+e.LABEL(class='label_' + name role='input-field') labelText
//- 			+e.INPUT(id=name type=type placeholder=placeholder)
mixin inputField(type,name,labelText,placeholder)
	+b(class='field-' + type)
		+e.LABEL #{labelText}:
		+e.INPUT(type=type, name='[#{name}]', value='[name]', placeholder=placeholder)
mixin svg(name,width,height)
	+e.SVG(class='icon_' + name + ' ' + 'icon' width=''+ width height=''+ height role='img')
		use(xlink:href="#icon_" + name)
mixin icon(iconName,width,height,isBlock)
	if isBlock
		svg(class='icon icon_' + iconName width=''+ width height=''+ height role='img')
			use(xlink:href='assets/images/svg/icon.svg#icon_#{iconName}')
	else
		+e(class='icon icon_' + iconName width=''+ width height=''+ height role='img')
			use(xlink:href='assets/images/svg/icon.svg#icon_#{iconName}')
//- ----------------------------------
//- Simplified version.
//-
//- Usage:
//- include lorem
//- p: +lipsum(42)
//- ----------------------------------


mixin capitalize(string)
	= string.charAt ( 0 ).toUpperCase () + string.slice ( 1 )

mixin lipsum(howmany)
	- var words = ['consectetur', 'adipiscing', 'elit', 'curabitur', 'vel', 'hendrerit', 'libero', 'eleifend', 'blandit', 'nunc', 'ornare', 'odio', 'ut', 'orci', 'gravida', 'imperdiet', 'nullam', 'purus', 'lacinia', 'a', 'pretium', 'quis', 'congue', 'praesent', 'sagittis', 'laoreet', 'auctor' ]
	- for (var i = 0; i < howmany; i++) {
	- var nextWord = words[Math.floor((Math.random()* ( words.length - 1 ) ))]
	if (i == 0)
		mixin capitalize(nextWord)
	else
		= ' ' + nextWord
		if i == howmany - 1
			= '.'
	- }

mixin form_element(config)
	//- default values
	- config.class_array = config.class_array || {}
	- config.class_array.block_class_mod = config.class_array.block_class_mod || ''
	- config.class_array.class_mod = config.class_array.class_mod || ''
	- config.class_array.elem_class = config.class_array.elem_class || ''
	- config.add_class = config.add_class || ''
	- config.add_modifier = config.add_modifier || ''
	- config.placeholder = config.placeholder || ''
	if !config.id
		- config.id = config.title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- config.id = config.id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	if config.type === 'text' || config.type === 'tel' || config.type === 'number' || config.type === 'password' || config.type === 'email' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'
		+e.DL.form-item(class=config.class_array.block_class_mod)
			dt
				+e.LABEL.label.label(for=config.id) #{config.title}
					span.validation
			dd(class='input-wrapper')
				if config.type === 'text' || config.type === 'tel' || config.type === 'number' || config.type === 'password' || config.type === 'email'
					if config.value
						input(value=config.value type=config.type id=config.id placeholder=config.placeholder)
						block
					else
						+e.INPUT.input-field(class='#{config.add_modifier} #{config.add_class}' name=config.id type=config.type id=config.id placeholder=config.placeholder)
						block
				if config.type === 'textarea'
					+e.TEXTAREA.input-field(class='#{config.add_modifier} #{config.add_class}' name=config.id type=config.type id=config.id placeholder=config.placeholder)
					block
				if config.type === 'file'
					input.input-field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)
					.input-field_file_field
						span.input-field_file_text #{config.title}
						span.input-field_file_butt Choose File
				if config.type === 'select'
					select.input-field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)
						each option in config.options
							option(value=option)= option
					block
	if config.type === 'checkbox' || config.type === 'radio'
		label.lbl_rb_ch_block(class=config.class_array.block_class_mod)
			if config.checked
				input.lbl_inp_rb_ch(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')
			else
				input.lbl_inp_rb_ch(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')
			span.lbl_rb_ch_text(class=config.class_mod) #{config.title}
			mixin row(o)
				- attributes = o || attributes
				div.cf.form-group()&attributes(attributes)
					block
